


class ColorPalette:
    colors = []

    def __init__(self, mem, address):
        for i in range(16):
            self.colors.append(mem.retrieve_content(address + i))

    def get_palette(self, id):
        return self.colors[id * 4 : (id + 1) * 4]

class BackgroundColorPalette(ColorPalette):
    def __init__(self, mem):
        super().__init__(mem, 0x3F00)

class SpriteColorPalette(ColorPalette):
    def __init__(self, mem):
        super().__init__(mem, 0x3F10)

class ColorMap:
    MAP = [
        (115, 115, 115),
        (0, 0, 152),
        (16, 0, 141),
        (62,0,130),
        (96,0,108),
        (108,0,0),
        (96,0,0),
        (63,28,0),
        (39,63,0),
        (0,73,28),
        (0,73,0),
        (0,62,28),
        (0,50,96),
        (0,0,0),
        (0,0,0),
        (0,0,0),
        (165,165,165),
        (0,73,187),
        (74,0,244),
        (108,0,211),
        (141,0,176),
        (153,0,85),
        (152,50,0),
        (130,73,0),
        (95,108,0),
        (39,130,0),
        (28,130,0),
        (0,130,73),
        (0,108,130),
        (27,27,27),
        (0,0,0),
        (0,0,0),
        (244,244,244),
        (108,164,255),
        (141,130,255),
        (188,120,255),
        (232,119,243),
        (244,108,187),
        (255,141,108),
        (211,165,74),
        (176,165,63),
        (131,188,0),
        (84,198,73),
        (74,199,131),
        (85,199,199),
        (84,84,84),
        (0,0,0),
        (0,0,0),
        (255,255,255),
        (198,222,255),
        (199,199,244),
        (221,198,255),
        (233,187,255),
        (244,198,222),
        (244,210,198),
        (222,198,176),
        (222,222,165),
        (210,233,176),
        (187,232,176),
        (176,222,188),
        (164,210,198),
        (198,198,198),
        (0,0,0),
        (0,0,0)
    ]

    @staticmethod
    def get_color_rgb_reference(color):
        return ColorMap.MAP[color]